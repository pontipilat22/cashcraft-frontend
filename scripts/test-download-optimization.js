const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º access token –∏–∑ —Ñ–∞–π–ª–∞
const tokenFile = path.join(__dirname, '..', 'test-token.txt');
let accessToken = '';

if (fs.existsSync(tokenFile)) {
  accessToken = fs.readFileSync(tokenFile, 'utf8').trim();
  console.log('‚úÖ Access token –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞');
} else {
  console.error('‚ùå –§–∞–π–ª test-token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª test-token.txt –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ–≥–æ –≤–∞—à access token');
  process.exit(1);
}

const API_URL = 'https://cashcraft-backend-production.up.railway.app';

async function testDownloadOptimization() {
  try {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é downloadData...\n');
    
    // 1. –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('üì• 1. –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å - –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...');
    const response1 = await fetch(`${API_URL}/api/v1/sync/download`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('üì° –°—Ç–∞—Ç—É—Å –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', response1.status, response1.statusText);
    
    if (response1.ok) {
      const data1 = await response1.json();
      console.log('‚úÖ –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω');
      console.log('‚è∞ lastSyncAt –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', data1.lastSyncAt);
      console.log('üìä –î–∞–Ω–Ω—ã–µ:', {
        accounts: Array.isArray(data1.accounts) ? data1.accounts.length : '–Ω–µ –º–∞—Å—Å–∏–≤',
        transactions: Array.isArray(data1.transactions) ? data1.transactions.length : '–Ω–µ –º–∞—Å—Å–∏–≤',
        categories: Array.isArray(data1.categories) ? data1.categories.length : '–Ω–µ –º–∞—Å—Å–∏–≤',
        debts: Array.isArray(data1.debts) ? data1.debts.length : '–Ω–µ –º–∞—Å—Å–∏–≤',
      });
      
      // 2. –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω
      console.log('\nüì• 2. –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω...');
      const response2 = await fetch(`${API_URL}/api/v1/sync/download`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${accessToken}`,
          'Content-Type': 'application/json'
        }
      });

      console.log('üì° –°—Ç–∞—Ç—É—Å –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', response2.status, response2.statusText);
      
      if (response2.ok) {
        const data2 = await response2.json();
        console.log('‚úÖ –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω');
        console.log('‚è∞ lastSyncAt –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', data2.lastSyncAt);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ lastSyncAt –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π
        if (data1.lastSyncAt === data2.lastSyncAt) {
          console.log('‚úÖ lastSyncAt –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞—Ç—å');
          console.log('üìã –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤—Ç–æ—Ä–æ–π downloadData –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–º–ø–æ—Ä—Ç');
        } else {
          console.log('‚ö†Ô∏è lastSyncAt —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è - –≤–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
        }
      } else {
        const errorText = await response2.text();
        console.error('‚ùå –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å –æ—à–∏–±–∫–∞:', errorText);
      }
      
    } else {
      const errorText = await response1.text();
      console.error('‚ùå –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—à–∏–±–∫–∞:', errorText);
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ downloadData –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('üìã –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:');
    console.log('   1. –ü–µ—Ä–≤—ã–π downloadData - –æ—á–∏—â–∞–µ—Ç –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ');
    console.log('   2. –í—Ç–æ—Ä–æ–π downloadData - –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –∏–º–ø–æ—Ä—Ç (lastSyncAt –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π)');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

testDownloadOptimization(); 
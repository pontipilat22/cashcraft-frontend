// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
const testTokenRefresh = async () => {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...\n');
  
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
    const AsyncStorage = require('@react-native-async-storage/async-storage');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ç–æ–∫–µ–Ω—ã
    const accessToken = await AsyncStorage.getItem('@cashcraft_access_token');
    const refreshToken = await AsyncStorage.getItem('@cashcraft_refresh_token');
    
    console.log('üìã –¢–µ–∫—É—â–∏–µ —Ç–æ–∫–µ–Ω—ã:');
    console.log('  Access Token:', accessToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
    console.log('  Refresh Token:', refreshToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
    
    if (!refreshToken) {
      console.log('‚ùå Refresh Token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ');
      return;
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
    console.log('\nüîÑ –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω...');
    
    const response = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/auth/refresh', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        refreshToken: refreshToken
      }),
    });
    
    console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      console.log('  –ù–æ–≤—ã–π Access Token:', data.accessToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
      console.log('  –ù–æ–≤—ã–π Refresh Token:', data.refreshToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã
      await AsyncStorage.setItem('@cashcraft_access_token', data.accessToken);
      await AsyncStorage.setItem('@cashcraft_refresh_token', data.refreshToken);
      
      console.log('üíæ –ù–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
      console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
      try {
        const meResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/auth/me', {
          headers: {
            'Authorization': `Bearer ${data.accessToken}`,
          },
        });
        
        if (meResponse.ok) {
          const userData = await meResponse.json();
          console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º —É—Å–ø–µ—à–µ–Ω:', userData.user.email);
        } else {
          console.log('‚ùå –ó–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º –Ω–µ —É–¥–∞–ª—Å—è:', meResponse.status);
        }
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
      }
      
    } else {
      const errorText = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', errorText);
      console.log('üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ');
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTokenRefresh(); 
import { useRef, useCallback } from 'react';

/**
 * –•—É–∫ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è DateTimePicker
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∞–º-–∫–ª–∏–∫–∏ –∏ race conditions
 */
export const useDatePickerProtection = () => {
  const isOpeningRef = useRef(false);
  const lastOpenTimeRef = useRef(0);
  
  const protectedOpen = useCallback((openFunction: () => void) => {
    const now = Date.now();
    
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 500ms
    if (now - lastOpenTimeRef.current < 500) {
      console.log('üö´ [DatePickerProtection] Blocked: Too fast consecutive calls');
      return false;
    }
    
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
    if (isOpeningRef.current) {
      console.log('üö´ [DatePickerProtection] Blocked: Already opening');
      return false;
    }
    
    console.log('‚úÖ [DatePickerProtection] Allowing DatePicker open');
    isOpeningRef.current = true;
    lastOpenTimeRef.current = now;
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ
    openFunction();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
      isOpeningRef.current = false;
    }, 100);
    
    return true;
  }, []);
  
  const protectedClose = useCallback((closeFunction: () => void) => {
    console.log('‚úÖ [DatePickerProtection] Closing DatePicker');
    isOpeningRef.current = false;
    closeFunction();
  }, []);
  
  const resetProtection = useCallback(() => {
    console.log('üîÑ [DatePickerProtection] Reset protection state');
    isOpeningRef.current = false;
    lastOpenTimeRef.current = 0;
  }, []);
  
  return {
    protectedOpen,
    protectedClose,
    resetProtection,
  };
};

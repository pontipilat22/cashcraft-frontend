const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º access token –∏–∑ —Ñ–∞–π–ª–∞
const tokenFile = path.join(__dirname, 'test-token.txt');
let accessToken = '';

if (fs.existsSync(tokenFile)) {
  accessToken = fs.readFileSync(tokenFile, 'utf8').trim();
  console.log('‚úÖ Access token –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞');
} else {
  console.error('‚ùå –§–∞–π–ª test-token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª test-token.txt –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ–≥–æ –≤–∞—à access token');
  process.exit(1);
}

async function testCashAccountFix() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å—á–µ—Ç–∞ "–ù–∞–ª–∏—á–Ω—ã–µ"...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å—á–µ—Ç–∞
    console.log('üìã 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å—á–µ—Ç–∞...');
    const accountsResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/accounts', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    if (!accountsResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—á–µ—Ç–æ–≤:', accountsResponse.status, accountsResponse.statusText);
      return;
    }

    const accounts = await accountsResponse.json();
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å—á–µ—Ç–æ–≤: ${accounts.length}`);
    accounts.forEach(acc => console.log(`   - ${acc.name} (${acc.type})`));

    // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç
    console.log('\nüìù 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç...');
    const testAccount = {
      name: 'Test Account',
      type: 'card',
      balance: 1000,
      currency: 'KZT',
      isDefault: false,
      isIncludedInTotal: true,
      color: '#4CAF50',
      icon: 'card'
    };

    const createResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/accounts', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testAccount)
    });

    if (!createResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', createResponse.status, createResponse.statusText);
      return;
    }

    const createdAccount = await createResponse.json();
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å—á–µ—Ç —Å–æ–∑–¥–∞–Ω:', createdAccount.name);

    // 3. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\nüóëÔ∏è 3. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ...');
    const resetResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/sync/wipe', {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    if (!resetResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö:', resetResponse.status, resetResponse.statusText);
      return;
    }

    const resetResult = await resetResponse.json();
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã:', resetResult.message);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞
    console.log('\nüîç 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞...');
    const accountsAfterResetResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/accounts', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    if (!accountsAfterResetResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—á–µ—Ç–æ–≤ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞:', accountsAfterResetResponse.status, accountsAfterResetResponse.statusText);
      return;
    }

    const accountsAfterReset = await accountsAfterResetResponse.json();
    console.log(`üìä –°—á–µ—Ç–æ–≤ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: ${accountsAfterReset.length}`);

    if (accountsAfterReset.length === 0) {
      console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢! –°—á–µ—Ç "–ù–∞–ª–∏—á–Ω—ã–µ" –±–æ–ª—å—à–µ –Ω–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö');
    } else {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–ê! –ù–∞–π–¥–µ–Ω—ã —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞:');
      accountsAfterReset.forEach(acc => console.log(`   - ${acc.name} (${acc.type})`));
    }

    // 5. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—á–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log('\nüìù 5. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—á–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...');
    const newAccount = {
      name: 'My Custom Account',
      type: 'bank',
      balance: 5000,
      currency: 'KZT',
      isDefault: true,
      isIncludedInTotal: true,
      color: '#2196F3',
      icon: 'bank'
    };

    const newAccountResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/accounts', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(newAccount)
    });

    if (!newAccountResponse.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞:', newAccountResponse.status, newAccountResponse.statusText);
      return;
    }

    const newCreatedAccount = await newAccountResponse.json();
    console.log('‚úÖ –ù–æ–≤—ã–π —Å—á–µ—Ç —Å–æ–∑–¥–∞–Ω:', newCreatedAccount.name);

    // 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüîç 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—á–µ—Ç–æ–≤...');
    const finalAccountsResponse = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/accounts', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    const finalAccounts = await finalAccountsResponse.json();
    console.log(`üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–µ—Ç–æ–≤: ${finalAccounts.length}`);
    finalAccounts.forEach(acc => console.log(`   - ${acc.name} (${acc.type})`));

    if (finalAccounts.length === 1 && finalAccounts[0].name === 'My Custom Account') {
      console.log('\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –°—á–µ—Ç "–ù–∞–ª–∏—á–Ω—ã–µ" –±–æ–ª—å—à–µ –Ω–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    } else {
      console.log('\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù! –ù–∞–π–¥–µ–Ω—ã –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

testCashAccountFix(); 
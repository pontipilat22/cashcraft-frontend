// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway backend
const testRailwayConnection = async () => {
  const url = 'https://cashcraft-backend-production.up.railway.app';
  
  console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway backend...\n');
  console.log(`URL: ${url}\n`);

  try {
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint...');
    const healthResponse = await fetch(`${url}/api/v1/health`);
    if (healthResponse.ok) {
      const healthData = await healthResponse.json();
      console.log(`‚úÖ Health check —É—Å–ø–µ—à–µ–Ω: ${JSON.stringify(healthData)}`);
    } else {
      console.log(`‚ùå Health check –æ—à–∏–±–∫–∞: ${healthResponse.status}`);
    }
  } catch (error) {
    console.log(`‚ùå Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
  }

  try {
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π endpoint...');
    const rootResponse = await fetch(`${url}/api/v1/`);
    if (rootResponse.ok) {
      const rootData = await rootResponse.json();
      console.log(`‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π endpoint: ${JSON.stringify(rootData)}`);
    } else {
      console.log(`‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π endpoint –æ—à–∏–±–∫–∞: ${rootResponse.status}`);
    }
  } catch (error) {
    console.log(`‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
  }

  try {
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º exchange rates endpoint...');
    const ratesResponse = await fetch(`${url}/api/v1/exchange-rates/rate?from=USD&to=KZT`);
    if (ratesResponse.ok) {
      const ratesData = await ratesResponse.json();
      console.log(`‚úÖ Exchange rates: ${JSON.stringify(ratesData)}`);
    } else {
      console.log(`‚ùå Exchange rates –æ—à–∏–±–∫–∞: ${ratesResponse.status}`);
    }
  } catch (error) {
    console.log(`‚ùå Exchange rates –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
  }

  console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testRailwayConnection(); 
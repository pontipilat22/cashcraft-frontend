const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º access token –∏–∑ —Ñ–∞–π–ª–∞
const tokenFile = path.join(__dirname, 'test-token.txt');
let accessToken = '';

if (fs.existsSync(tokenFile)) {
  accessToken = fs.readFileSync(tokenFile, 'utf8').trim();
  console.log('‚úÖ Access token –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞');
} else {
  console.error('‚ùå –§–∞–π–ª test-token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª test-token.txt –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ–≥–æ –≤–∞—à access token');
  process.exit(1);
}

async function testSyncDownload() {
  try {
    const response = await fetch('https://cashcraft-backend-production.up.railway.app/api/v1/sync/download', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);
    console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', Object.fromEntries(response.headers.entries()));

    const text = await response.text();
    console.log('\nüìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log(text);

    try {
      const data = JSON.parse(text);
      console.log('\nüìä –†–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–π JSON:');
      console.log(JSON.stringify(data, null, 2));
      
      if (data.accounts) {
        console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log('  - –°—á–µ—Ç–∞:', Array.isArray(data.accounts) ? data.accounts.length : '–Ω–µ –º–∞—Å—Å–∏–≤');
        console.log('  - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', Array.isArray(data.transactions) ? data.transactions.length : '–Ω–µ –º–∞—Å—Å–∏–≤');
        console.log('  - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', Array.isArray(data.categories) ? data.categories.length : '–Ω–µ –º–∞—Å—Å–∏–≤');
        console.log('  - –î–æ–ª–≥–∏:', Array.isArray(data.debts) ? data.debts.length : '–Ω–µ –º–∞—Å—Å–∏–≤');
      }
    } catch (parseError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
  }
}

testSyncDownload(); 